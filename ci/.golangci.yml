run:
  concurrency: 4
  deadline: 5m
  issues-exit-code: 1
  tests: true
  build-tags:
  skip-dirs:
  skip-files:
  modules-download-mode:

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    # ? default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # ? default is false: such cases aren't reported by default.
    check-blank: false
    exclude:

  govet:
    check-shadowing: true

    # ? settings per analyzer
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  golint:
    min-confidence: 0.7
  gofmt:
    simplify: true
  goimports:
    # ? put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/org/project
  gocyclo:
    # 10-20 recommended
    min-complexity: 20
  maligned:
    suggest-new: true
  dupl:
    threshold: 100
  goconst:
    min-len: 3
    min-occurrences: 3
  depguard:
    list-type: blacklist
    include-go-root: false
    packages:
      - github.com/davecgh/go-spew/spew
  misspell:
    locale: US
    ignore-words:
  lll:
    line-length: 135
    tab-width: 1
  unused:
    check-exported: false
  unparam:
    # ? Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  nakedret:
    max-func-lines: 30
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
  gocritic:
    # See https://go-critic.github.io/overview#checks-overview
    # To check which checks are enabled run `GL_DEBUG=gocritic golangci-lint run --config=./ci/.golangci_full.yml`
    enabled-checks:
      - appendAssign
      - appendCombine
      - assignOp
      - builtinShadow
      - captLocal
      - caseOrder
      - defaultCaseOrder
      - dupArg
      - dupBranchBody
      - dupCase
      - dupSubExpr
      - elseif
      - flagDeref
      - importShadow
      - indexAlloc
      - rangeExprCopy
      - rangeValCopy
      - regexpMust
      - singleCaseSwitch
      - sloppyLen
      - switchTrue
      - typeSwitchVar
      - underef
      - unlambda
      - unslice

  #   settings: # settings passed to gocritic
  #     captLocal: # must be valid enabled check name
  #       paramsOnly: true
  #     rangeValCopy:
  #       sizeThreshold: 32

linters:
  enable:
    - deadcode
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - structcheck
    - typecheck
    - unused
    - varcheck
  enable-all: false
  disable:
    - depguard
    - dupl
    - gochecknoglobals
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - golint
    - gosec
    - interfacer
    - lll
    - maligned
    - misspell
    - nakedret
    - prealloc
    - scopelint
    - stylecheck
    - unconvert
    - unparam
  disable-all: false

issues:
  exclude:
  exclude-rules:
    - path: _test\.go
      linters:
        - gocyclo
        - dupl
        - gosec

    # Exclude some staticcheck messages
    # - linters:
    #     - staticcheck
    #   text: "SA9003:"

    # Exclude lll issues for long lines with go:generate
    # - linters:
    #     - lll
    #   source: "^//go:generate "

  # ? Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: true
  max-issues-per-linter: 50
  max-same-issues: 5
  new: false
